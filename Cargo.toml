[workspace.package]
version = "0.0.0"
authors = ["Michal Nazarewicz <mina86@mina86.com>"]
edition = "2021"
rust-version = "1.71.0"

[workspace]
members = [
    "common/*",
    "solana/allocator",
    "solana/ed25519",
    "solana/restaking/programs/*",
    "solana/signature-verifier",
    "solana/solana-ibc/programs/*",
    "solana/trie",
    "solana/trie-example",
    "solana/write-account",
    "validator",
]
resolver = "2"

[profile.release]
overflow-checks = true
lto = "fat"
codegen-units = 1
[profile.release.build-override]
opt-level = 3
incremental = false
codegen-units = 1

[workspace.dependencies]
anchor-lang = {version = "0.29.0", features = ["init-if-needed"]}
anchor-spl = "0.29.0"
ascii = "1.1.0"
bs58 = { version = "0.5.0", features = ["alloc"] }
base64 = { version = "0.21", default-features = false, features = ["alloc"] }
borsh = { version = "0.10.3", default-features = false }
bytemuck = { version = "1.14", default-features = false }
clap = { version = "4.4.18", features = ["derive"] }
derive_more = "0.99.17"
dialoguer = "0.10"
directories = "5.0"
ed25519-dalek = "=1.0.1"  # Must match solana-sdk’s dependency.
env_logger = "0.7.1"
hex-literal = "0.4.1"
ibc = { version = "0.50.0", default-features = false, features = ["borsh", "serde"] }
ibc-core-channel-types = { version = "0.50.0", default-features = false }
ibc-core-client-context = { version = "0.50.0", default-features = false }
ibc-core-client-types = { version = "0.50.0", default-features = false }
ibc-core-commitment-types = { version = "0.50.0", default-features = false }
ibc-core-connection-types = { version = "0.50.0", default-features = false }
ibc-core-host = { version = "0.50.0", default-features = false }
ibc-core-host-types = { version = "0.50.0", default-features = false }
ibc-primitives = { version = "0.50.0", default-features = false }
ibc-proto = { version = "0.41.0", default-features = false }
ibc-testkit = { version = "0.50.0", default-features = false }
insta = { version = "1.34.0" }
# https://github.com/contain-rs/linear-map/pull/38 adds no_std support
linear-map = { git = "https://github.com/contain-rs/linear-map", rev = "57f1432e26ff902bc883b250a85e0b5716bd241c", default-features = false }
log = "0.4.20"
pretty_assertions = "1.4.0"
primitive-types = "0.12.2"
prost = { version = "0.12.3", default-features = false }
prost-build = { version = "0.12.3", default-features = false }
rand = { version = "0.8.5" }
serde = "1"
serde_json = "1"
serde_bytes = "0.11.14"
sha2 = { version = "0.10.7", default-features = false }
solana-client = "1.17.7"
solana-program = "1.17.7"
solana-sdk = "1.17.7"
spl-associated-token-account = "2.2.0"
spl-token = "4.0.0"
strum = { version = "0.25.0", default-features = false, features = ["derive"] }
tokio = "1.35.1"
toml = "0.8.8"
uint = "0.9.5"

blockchain = { path = "common/blockchain" }
lib = { path = "common/lib" }
memory = { path = "common/memory" }
restaking = { path = "solana/restaking/programs/restaking" }
sealable-trie = { path = "common/sealable-trie" }
solana-allocator = { path = "solana/allocator" }
solana-ed25519 = { path = "solana/ed25519" }
solana-ibc = { path = "solana/solana-ibc/programs/solana-ibc" }
solana-trie = { path = "solana/trie" }
solana-write-account = { path = "solana/write-account" }
stdx = { path = "common/stdx" }
trie-ids = { path = "common/trie-ids" }

# dev-dependencies
anchor-client = "0.29.0"
anyhow = "1.0.32"

[patch.crates-io]
# aes-gcm-siv 0.10.3 and curve25519-dalek 3.x pin zeroize to <1.4
# which conflicts with other dependencies requiring zeroize ^1.5.
# We’re patching both crates to unpin zeroize.
#
# For aes-gcm-siv we’re using the same revision Solana uses in
# an (as of now) unreleased commit, see
# https://github.com/solana-labs/solana/commit/01f1bf27994d9813fadfcd134befd3a449aaa0bd
#
# For curve25519-dalek we’re using commit from a PR, see
# https://github.com/dalek-cryptography/curve25519-dalek/pull/606
aes-gcm-siv = { git = "https://github.com/RustCrypto/AEADs", rev = "6105d7a5591aefa646a95d12b5e8d3f55a9214ef" }
curve25519-dalek = { git = "https://github.com/dalek-cryptography/curve25519-dalek", rev = "8274d5cbb6fc3f38cdc742b4798173895cd2a290" }

# eyre has a mutable global variable which is something Solana
# programs cannot have.  tendermint 0.34 enables eyre unconditionally;
# version which doesn’t do that hasn’t been released yet so we need to
# refer to a commit on master.
tendermint = { git = "https://github.com/informalsystems/tendermint-rs", rev = "37822e540e272d2ca9e763769ad20c581203ff9a" }
tendermint-proto = { git = "https://github.com/informalsystems/tendermint-rs", rev = "37822e540e272d2ca9e763769ad20c581203ff9a" }

# Adds support for custom-entrypoint feature
anchor-syn = { git = "https://github.com/mina86/anchor", branch = "custom-entrypoint" }

# We need to patch ibc-client-tendermint to support custom verifier.
# Unfortunately, because that crate refers to other ibc-rs crates by
# path, we then need to patch all the other crates in ibc-rs as well.
#cw-check = { git = "https://github.com/mina86/ibc-rs", branch = "solana-verifier" }
ibc = { git = "https://github.com/mina86/ibc-rs", branch = "solana-verifier" }
ibc-app-nft-transfer = { git = "https://github.com/mina86/ibc-rs", branch = "solana-verifier" }
ibc-app-nft-transfer-types = { git = "https://github.com/mina86/ibc-rs", branch = "solana-verifier" }
ibc-app-transfer = { git = "https://github.com/mina86/ibc-rs", branch = "solana-verifier" }
ibc-app-transfer-types = { git = "https://github.com/mina86/ibc-rs", branch = "solana-verifier" }
ibc-apps = { git = "https://github.com/mina86/ibc-rs", branch = "solana-verifier" }
ibc-client-tendermint = { git = "https://github.com/mina86/ibc-rs", branch = "solana-verifier" }
ibc-client-tendermint-types = { git = "https://github.com/mina86/ibc-rs", branch = "solana-verifier" }
ibc-client-wasm-types = { git = "https://github.com/mina86/ibc-rs", branch = "solana-verifier" }
ibc-clients = { git = "https://github.com/mina86/ibc-rs", branch = "solana-verifier" }
ibc-core = { git = "https://github.com/mina86/ibc-rs", branch = "solana-verifier" }
ibc-core-channel = { git = "https://github.com/mina86/ibc-rs", branch = "solana-verifier" }
ibc-core-channel-types = { git = "https://github.com/mina86/ibc-rs", branch = "solana-verifier" }
ibc-core-client = { git = "https://github.com/mina86/ibc-rs", branch = "solana-verifier" }
ibc-core-client-context = { git = "https://github.com/mina86/ibc-rs", branch = "solana-verifier" }
ibc-core-client-types = { git = "https://github.com/mina86/ibc-rs", branch = "solana-verifier" }
ibc-core-commitment-types = { git = "https://github.com/mina86/ibc-rs", branch = "solana-verifier" }
ibc-core-connection = { git = "https://github.com/mina86/ibc-rs", branch = "solana-verifier" }
ibc-core-connection-types = { git = "https://github.com/mina86/ibc-rs", branch = "solana-verifier" }
ibc-core-handler = { git = "https://github.com/mina86/ibc-rs", branch = "solana-verifier" }
ibc-core-handler-types = { git = "https://github.com/mina86/ibc-rs", branch = "solana-verifier" }
ibc-core-host = { git = "https://github.com/mina86/ibc-rs", branch = "solana-verifier" }
ibc-core-host-cosmos = { git = "https://github.com/mina86/ibc-rs", branch = "solana-verifier" }
ibc-core-host-types = { git = "https://github.com/mina86/ibc-rs", branch = "solana-verifier" }
ibc-core-router = { git = "https://github.com/mina86/ibc-rs", branch = "solana-verifier" }
ibc-core-router-types = { git = "https://github.com/mina86/ibc-rs", branch = "solana-verifier" }
#ibc-data-types = { git = "https://github.com/mina86/ibc-rs", branch = "solana-verifier" }
ibc-derive = { git = "https://github.com/mina86/ibc-rs", branch = "solana-verifier" }
ibc-primitives = { git = "https://github.com/mina86/ibc-rs", branch = "solana-verifier" }
#ibc-query = { git = "https://github.com/mina86/ibc-rs", branch = "solana-verifier" }
ibc-testkit = { git = "https://github.com/mina86/ibc-rs", branch = "solana-verifier" }
#no-std-check = { git = "https://github.com/mina86/ibc-rs", branch = "solana-verifier" }

# We need to further instruct Crate to take solana-ed25519 from this
# directory rather than from git when ibc-rs uses it.  Otherwise we
# would end up with two versions of solana-ed25519: we would use ours
# (from the checked out directory) and ibc-rs would use one from the
# repository.
[patch."https://github.com/ComposableFi/emulated-light-client/"]
solana-ed25519 = { path = "solana/ed25519" }
