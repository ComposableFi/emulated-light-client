---
name: PR Checks
on:
  pull_request:
    branches:
      - '*'
  push:
    branches:
      - master

env:
  SOLANA_VERSION: v1.18.16
  ANCHOR_VERSION: 0.30.0

jobs:
  misc:
    name: Miscellaneous checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        id: install-rust
        uses: dtolnay/rust-toolchain@master
        with:
          # Pin nightly to specific version to avoid ahash breakage.
          # See https://github.com/tkaitchuck/aHash/issues/200
          # TODO(mina86): Unpin once situation with ahash is resolved.
          # Hopefully we wonâ€™t need to patch.
          #toolchain: nightly
          toolchain: nightly-2024-02-05
          components: clippy rustfmt miri

      - name: Install Protoc
        uses: arduino/setup-protoc@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Check formatting
        run: cargo fmt --all --check

      - name: Cache cargo-deny
        id: cache-cargo-deny
        uses: actions/cache@v4
        with:
          path: ~/.cargo/bin/cargo-deny
          key: ${{ runner.os }}-${{ steps.install-rust.outputs.cachekey }}-cargo-deny

      - name: Install cargo-deny
        if: steps.cache-cargo-deny.outputs.cache-hit != 'true'
        run: cargo install --locked cargo-deny

      - name: Check bans
        run: cargo-deny --all-features check bans

      - name: Check Clippy (all features)
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features -- -D warnings

      - name: Miri tests
        run: cargo miri test -- -Z unstable-options --report-time --skip ::anchor

  anchor-build:
    name: Anchor Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Node JS 16
        uses: actions/setup-node@v4
        with:
          node-version: 16.14.2
          cache: "yarn"

      - name: Install Rust
        id: install-rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          components: rustfmt

      - name: Install Protoc
        uses: arduino/setup-protoc@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache Anchor
        id: cache-anchor
        uses: actions/cache@v4
        with:
          path: |
            ~/.avm
            ~/.cargo/bin/avm
            ~/.cargo/bin/anchor
            ~/.config/solana/
            ~/.local/share/solana/
          key: ${{ runner.os }}-${{ steps.install-rust.outputs.cachekey }}-${{ env.SOLANA_VERSION }}-${{ env.ANCHOR_VERSION }}-anchor

      - name: Install Solana
        if: steps.cache-anchor.outputs.cache-hit != 'true'
        run: |
          set -eux
          curl -sSfL https://release.solana.com/$SOLANA_VERSION/install | sh
          cp solana/solana-ibc/keypair.json ~/.config/solana/id.json

      - name: Setup Solana PATH
        run: echo "$HOME/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH

      - name: Install Anchor
        if: steps.cache-anchor.outputs.cache-hit != 'true'
        run: |
          set -eux
          cargo install --git https://github.com/coral-xyz/anchor avm --locked --force
          avm install $ANCHOR_VERSION
          avm use $ANCHOR_VERSION

      - name: Installing node modules
        run : yarn

      - name: Installing ts-mocha and typescript globally
        run: yarn global add ts-mocha typescript

      - name: Anchor Build (with mocks)
        run: anchor build -- --features=mocks

      - name: Anchor Test
        run: anchor test --skip-build

  tests:
    name: Rust tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          components: rustfmt

      - name: Install Protoc
        uses: arduino/setup-protoc@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Run tests (default features)
        run: cargo test

      - name: Run tests (no default features)
        run: cargo test --no-default-features

      - name: Run tests (all features)
        run: cargo test --all-features
